import { useEffect, useState } from "react";
import { useLocation } from "wouter";
import { useQuery } from "@tanstack/react-query";
import { useAuth } from "@/lib/auth";
import { IOSButton } from "@/components/ui/ios-button";
import { Card, CardContent } from "@/components/ui/card";
import { motion, AnimatePresence } from "framer-motion";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import type { Message } from "@shared/schema";

const FULL_MESSAGES: Record<string, string> = {
  "Miss you": `–õ—é–±–∏–º–∞—è,

–Ø —Ç–∞–∫ —Å–∫—É—á–∞—é –ø–æ —Ç–µ–±–µ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É. –¢–≤–æ—è —É–ª—ã–±–∫–∞ –æ—Å–≤–µ—â–∞–µ—Ç –º–æ–π –º–∏—Ä, –∞ —Ç–≤–æ–π —Å–º–µ—Ö –¥–µ–ª–∞–µ—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –æ—Å–æ–±–µ–Ω–Ω—ã–º. –ù–µ –º–æ–≥—É –¥–æ–∂–¥–∞—Ç—å—Å—è –Ω–∞—à–µ–π —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏.

–¢—ã - —Å–∞–º–æ–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏. –ö–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç —Å —Ç–æ–±–æ–π - —ç—Ç–æ —Å—á–∞—Å—Ç—å–µ.

–° –ª—é–±–æ–≤—å—é,
–ï–≥–æ—Ä ‚ù§Ô∏è`,

  "Our plans": `–î–æ—Ä–æ–≥–∞—è,

–Ø —Ç–∞–∫ –≤–∑–≤–æ–ª–Ω–æ–≤–∞–Ω –Ω–∞—à–∏–º–∏ –ø–ª–∞–Ω–∞–º–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é! –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é, –∫–∞–∫ –º—ã –±—É–¥–µ–º –≥—É–ª—è—Ç—å –≤–º–µ—Å—Ç–µ, –¥–µ—Ä–∂–∞—Ç—å—Å—è –∑–∞ —Ä—É–∫–∏ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–º –º–æ–º–µ–Ω—Ç–æ–º.

–£ –º–µ–Ω—è —Å—Ç–æ–ª—å–∫–æ –∏–¥–µ–π –¥–ª—è –Ω–∞—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤–º–µ—Å—Ç–µ. –•–æ—á—É —Å–¥–µ–ª–∞—Ç—å –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –æ—Å–æ–±–µ–Ω–Ω–æ–π –¥–ª—è —Ç–µ–±—è.

–¢–≤–æ–π –ï–≥–æ—Ä üíë`,

  "Love you": `–ú–æ—è –ª—é–±–∏–º–∞—è,

–ü—Ä–æ—Å—Ç–æ —Ö–æ—Ç–µ–ª —Å–∫–∞–∑–∞—Ç—å, –∫–∞–∫ —Å–∏–ª—å–Ω–æ —è —Ç–µ–±—è –ª—é–±–ª—é. –¢—ã - –º–æ–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ, –º–æ—è —Ä–∞–¥–æ—Å—Ç—å, –º–æ–µ –≤—Å–µ. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä—é —Å—É–¥—å–±—É –∑–∞ —Ç–æ, —á—Ç–æ —Ç—ã –µ—Å—Ç—å –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏.

–¢—ã –¥–µ–ª–∞–µ—à—å –º–µ–Ω—è —Å—á–∞—Å—Ç–ª–∏–≤—ã–º –ø—Ä–æ—Å—Ç–æ —Ç–µ–º, —á—Ç–æ —Ç—ã –µ—Å—Ç—å. –õ—é–±–ª—é —Ç–µ–±—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ.

–ù–∞–≤—Å–µ–≥–¥–∞ —Ç–≤–æ–π,
–ï–≥–æ—Ä üíñ`
};

export default function MailPage() {
  const [, navigate] = useLocation();
  const { isAuthenticated, unlockApp } = useAuth();
  const [selectedMessage, setSelectedMessage] = useState<Message | null>(null);

  const { data: messages } = useQuery<Message[]>({
    queryKey: ["/api/messages"]
  });

  useEffect(() => {
    if (!isAuthenticated) {
      navigate("/");
    }
    unlockApp("mail");
  }, [isAuthenticated, navigate, unlockApp]);

  return (
    <div className="min-h-screen bg-[#FFF0F5] p-4">
      <div className="max-w-md mx-auto">
        <div className="flex items-center justify-between mb-8">
          <h1 className="text-2xl font-semibold text-pink-600">Mail</h1>
          <IOSButton variant="ghost" onClick={() => navigate("/home")}>Back</IOSButton>
        </div>

        <div className="space-y-4">
          <AnimatePresence>
            {messages?.map((message, i) => (
              <motion.div
                key={message.id}
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ delay: i * 0.1 }}
              >
                <Card className="cursor-pointer hover:shadow-lg transition-shadow"
                      onClick={() => setSelectedMessage(message)}>
                  <CardContent className="p-4">
                    <div className="flex justify-between items-start mb-2">
                      <h3 className="font-medium text-pink-600">{message.subject}</h3>
                      <span className="text-sm text-pink-400">{message.date}</span>
                    </div>
                    <p className="text-sm text-gray-600 mb-2 line-clamp-2">{message.content}</p>
                    <p className="text-sm text-pink-500">From: {message.sender}</p>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </AnimatePresence>
        </div>

        <Dialog open={!!selectedMessage} onOpenChange={() => setSelectedMessage(null)}>
          <DialogContent className="bg-white">
            <DialogHeader>
              <DialogTitle className="text-pink-600">{selectedMessage?.subject}</DialogTitle>
            </DialogHeader>
            <div className="mt-4 space-y-4">
              <p className="whitespace-pre-wrap text-gray-700">
                {selectedMessage && FULL_MESSAGES[selectedMessage.subject]}
              </p>
              <p className="text-sm text-pink-500">From: {selectedMessage?.sender}</p>
              <p className="text-sm text-pink-400">{selectedMessage?.date}</p>
            </div>
          </DialogContent>
        </Dialog>
      </div>
    </div>
  );
}